#using JOIN

SELECT 
    p.product_id,
    IFNULL(q.new_price,10) as price
FROM
(SELECT DISTINCT product_id FROM Products) p 
LEFT JOIN
(
SELECT 
    p.product_id,
    p.new_price,
    row_number() OVER(PARTITION BY p.product_id ORDER BY p.change_date desc ) as r
FROM Products p 
WHERE p.change_date<='2019-08-16'
) q
ON p.product_id=q.product_id
WHERE q.r=1 or q.product_id is null;

#using Union

SELECT 
    product_id, 
    10 as price
FROM Products p 
GROUP BY p.product_id 
HAVING min(p.change_date)>'2019-08-16'
UNION 
SELECT 
    product_id,
    new_price as price
FROM Products p1
WHERE (product_id,change_date) IN 
( SELECT 
    product_id,
    MAX(change_date) as d
FROM Products 
WHERE change_date <='2019-08-16'
GROUP BY product_id)
ORDER BY product_id;
